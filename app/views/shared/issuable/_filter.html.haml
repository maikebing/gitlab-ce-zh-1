- finder = controller.controller_name == 'issues' || controller.controller_name == 'boards' ? issues_finder : merge_requests_finder
- boards_page = controller.controller_name == 'boards'

.issues-filters
  .issues-details-filters.row-content-block.second-block
    = form_tag page_filter_path(without: [:assignee_id, :author_id, :milestone_title, :label_name, :search]), method: :get, class: 'filter-form js-filter-form' do
      - if params[:search].present?
        = hidden_field_tag :search, params[:search]
      - if @bulk_edit
        .check-all-holder
          = check_box_tag "check_all_issues", nil, false,
            class: "check_all_issues left"
      .issues-other-filters
        .filter-item.inline
          - if params[:author_id].present?
            = hidden_field_tag(:author_id, params[:author_id])
          = dropdown_tag(user_dropdown_label(params[:author_id], "作者"), options: { toggle_class: "js-user-search js-filter-submit js-author-search", title: "按作者过滤", filter: true, dropdown_class: "dropdown-menu-user dropdown-menu-selectable dropdown-menu-author js-filter-submit",
            placeholder: "搜索作者", data: { any_user: "任何作者", first_user: current_user.try(:username), current_user: true, project_id: @project.try(:id), selected: params[:author_id], field_name: "author_id", default_label: "作者" } })

        .filter-item.inline
          - if params[:assignee_id].present?
            = hidden_field_tag(:assignee_id, params[:assignee_id])
          = dropdown_tag(user_dropdown_label(params[:assignee_id], "指派"), options: { toggle_class: "js-user-search js-filter-submit js-assignee-search", title: "按指派过滤", filter: true, dropdown_class: "dropdown-menu-user dropdown-menu-selectable dropdown-menu-assignee js-filter-submit",
            placeholder: "搜索指派", data: { any_user: "任何指派", first_user: current_user.try(:username), null_user: true, current_user: true, project_id: @project.try(:id), selected: params[:assignee_id], field_name: "assignee_id", default_label: "指派" } })

        .filter-item.inline.milestone-filter
          = render "shared/issuable/milestone_dropdown", selected: finder.milestones.try(:first), name: :milestone_title, show_any: true, show_upcoming: true

        .filter-item.inline.labels-filter
          = render "shared/issuable/label_dropdown", selected: finder.labels.select(:title).uniq, use_id: false, selected_toggle: params[:label_name], data_options: { field_name: "label_name[]" }

        - if issuable_filters_present
          .filter-item.inline.reset-filters
            %a{href: page_filter_path(without: [:assignee_id, :author_id, :milestone_title, :label_name, :search])} 重置过滤器

        .pull-right
          - if boards_page
            #js-boards-seach.issue-boards-search
              %input.pull-left.form-control{ type: "search", placeholder: "按名称过滤...", "v-model" => "filters.search", "debounce" => "250" }
              - if can?(current_user, :admin_list, @project)
                .dropdown.pull-right
                  %button.btn.btn-create.js-new-board-list{ type: "button", data: { toggle: "dropdown", labels: labels_filter_path, namespace_path: @project.try(:namespace).try(:path), project_path: @project.try(:path) } }
                    创建新的列表
                  .dropdown-menu.dropdown-menu-paging.dropdown-menu-align-right.dropdown-menu-issues-board-new.dropdown-menu-selectable
                    = render partial: "shared/issuable/label_page_default", locals: { show_footer: true, show_create: true, show_boards_content: true, title: "创建新的列表" }
                    - if can?(current_user, :admin_label, @project)
                      = render partial: "shared/issuable/label_page_create"
                    = dropdown_loading
          - else
            = render 'shared/sort_dropdown'

    - if @bulk_edit
      .issues_bulk_update.hide
        = form_tag [:bulk_update, @project.namespace.becomes(Namespace), @project, type], method: :post, class: 'bulk-update'  do
          .filter-item.inline
            = dropdown_tag("状态", options: { toggle_class: "js-issue-status", title: "更改状态", dropdown_class: "dropdown-menu-status dropdown-menu-selectable", data: { field_name: "update[state_event]" } } ) do
              %ul
                %li
                  %a{href: "#", data: {id: "reopen"}} 未关闭
                %li
                  %a{href: "#", data: {id: "close"}} 已关闭
          .filter-item.inline
            = dropdown_tag("指派", options: { toggle_class: "js-user-search js-update-assignee js-filter-submit js-filter-bulk-update", title: "指派给", filter: true, dropdown_class: "dropdown-menu-user dropdown-menu-selectable",
              placeholder: "搜索作者", data: { first_user: (current_user.username if current_user), null_user: true, current_user: true, project_id: @project.id, field_name: "update[assignee_id]" } })
          .filter-item.inline
            = dropdown_tag("里程碑", options: { title: "指派里程碑", toggle_class: 'js-milestone-select js-extra-options js-filter-submit js-filter-bulk-update', filter: true, dropdown_class: "dropdown-menu-selectable dropdown-menu-milestone", placeholder: "搜索里程碑", data: { show_no: true, field_name: "update[milestone_id]", project_id: @project.id, milestones: namespace_project_milestones_path(@project.namespace, @project, :json), use_id: true } })
          .filter-item.inline.labels-filter
            = render "shared/issuable/label_dropdown", classes: ['js-filter-bulk-update', 'js-multiselect'], show_create: false, show_footer: false, extra_options: false, filter_submit: false, data_options: { persist_when_hide: "true", field_name: "update[label_ids][]", show_no: false, show_any: false, use_id: true }
          .filter-item.inline
            = dropdown_tag("订阅", options: { toggle_class: "js-subscription-event", title: "更改订阅", dropdown_class: "dropdown-menu-selectable", data: { field_name: "update[subscription_event]" } } ) do
              %ul
                %li
                  %a{href: "#", data: {id: "subscribe"}} 订阅
                %li
                  %a{href: "#", data: {id: "unsubscribe"}} 取消订阅

          = hidden_field_tag 'update[issuable_ids]', []
          = hidden_field_tag :state_event, params[:state_event]
          .filter-item.inline
            = button_tag "更新 #{type.to_s.humanize(capitalize: false)}", class: "btn update_selected_issues btn-save"
  - has_labels = @labels && @labels.any?
  .row-content-block.second-block.filtered-labels{ class: ("hidden" unless has_labels) }
    - if has_labels
      = render 'shared/labels_row', labels: @labels

:javascript
  new UsersSelect();
  new LabelsSelect();
  new MilestoneSelect();
  new IssueStatusSelect();
  new SubscriptionSelect();
  $('form.filter-form').on('submit', function (event) {
    event.preventDefault();
    Turbolinks.visit(this.action + '&' + $(this).serialize());
  });